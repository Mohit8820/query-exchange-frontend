{"version":3,"file":"static/js/677.ed54dd32.chunk.js","mappings":"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","sources":["assets/getNow.js","pages/AskQuestion/AskQuestion.jsx"],"sourcesContent":["function getNow() {\n  var today = new Date();\n  var dd = String(today.getDate()).padStart(2, \"0\");\n  var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n  var yyyy = today.getFullYear();\n  var h = String(today.getHours()).padStart(2, \"0\");\n  var m = String(today.getMinutes()).padStart(2, \"0\"); //January is 0!\n  var s = String(today.getSeconds()).padStart(2, \"0\");\n\n  var now = yyyy + \"-\" + mm + \"-\" + dd + \" \" + h + \":\" + m + \":\" + s;\n\n  return now;\n}\nexport default getNow;\n","import React, { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport getNow from \"../../assets/getNow\";\r\nimport { useHttpClient } from \"../../hooks/http-hook\";\r\nimport { AuthContext } from \"../../contexts/auth-context\";\r\nimport ErrorModal from \"../../components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../components/UIElements/LoadingSpinner\";\r\nimport \"./AskQuestion.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport InputLabel from \"@mui/material/InputLabel/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\n\r\nfunction AskQuestion(props) {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [ques, setques] = useState({\r\n    upVotes: 0,\r\n    downVotes: 0,\r\n    noOfAnswers: 0,\r\n    questionTitle: \"\",\r\n    questionBody: \"\",\r\n    questionTags: \"\",\r\n    userPosted: \"\",\r\n    //askedOn: getNow,\r\n    userId: auth.userId,\r\n    answer: [\r\n      {\r\n        answerBody: \"\",\r\n        userAnswered: \"\",\r\n        //     //     //   answeredOn: \"jan 2\",\r\n        userId: \"\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setques((prevQues) => {\r\n      return {\r\n        ...prevQues,\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const submitQues = async (event) => {\r\n    event.preventDefault();\r\n    console.group(auth.userId);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_API_URL + \"/questions/\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          questionTitle: ques.questionTitle,\r\n          questionBody: ques.questionBody,\r\n          questionTags: ques.questionTags,\r\n          askedOn: getNow(),\r\n          userId: auth.userId,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      navigate(\"/home\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <div className=\"ask-ques-container\">\r\n        <h1>Ask a public Question</h1>\r\n        <form onSubmit={submitQues}>\r\n          <div className=\"ask-form-container\">\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <label htmlFor=\"ask-ques-title\">\r\n              <h4>Title</h4>\r\n              <p>\r\n                Be specific and imagine youâ€™re asking a question to another\r\n                person\r\n              </p>\r\n              <input\r\n                name=\"questionTitle\"\r\n                onChange={handleChange}\r\n                value={ques.questionTitle}\r\n                type=\"text\"\r\n                placeholder=\"e.g. Is there an R function for finding the index of an element in a vector?\"\r\n                required\r\n              />\r\n            </label>\r\n            <label htmlFor=\"ask-ques-body\">\r\n              <h4>Body</h4>\r\n              <p>\r\n                Include all the information someone would need to answer your\r\n                question\r\n              </p>\r\n              <textarea\r\n                name=\"questionBody\"\r\n                onChange={handleChange}\r\n                value={ques.questionBody}\r\n                cols=\"30\"\r\n                rows=\"7\"\r\n                required\r\n              ></textarea>\r\n            </label>\r\n\r\n            <h4>Program</h4>\r\n            <Box sx={{ minWidth: 200, marginBottom: \"2.5rem\" }}>\r\n              <FormControl sx={{ minWidth: 200, backgroundColor: \"white\" }}>\r\n                <InputLabel id=\"demo-simple-select-label\">Program</InputLabel>\r\n                <Select\r\n                  name=\"questionTags\"\r\n                  labelId=\"questionTags-label\"\r\n                  id=\"questionTags\"\r\n                  value={ques.questionTags}\r\n                  label=\"program\"\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  <MenuItem value=\"b.tech\">B.Tech</MenuItem>\r\n                  <MenuItem value=\"m.tech\">M.Tech</MenuItem>\r\n                  <MenuItem value=\"mca\">MCA</MenuItem>\r\n                  <MenuItem value=\"bca\">BCA</MenuItem>\r\n                  <MenuItem value=\"diploma\">Diploma</MenuItem>\r\n                  <MenuItem value=\"b.com\">B.Com</MenuItem>\r\n                  <MenuItem value=\"m.com\">M.Com</MenuItem>\r\n                  <MenuItem value=\"bba\">BBA</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n            {/* <label htmlFor=\"ask-ques-tags\">\r\n              <h4>Tags</h4>\r\n              <p>Add up to 5 tags to describe what your question is about</p>\r\n              <input\r\n                type=\"text\"\r\n                name=\"questionTags\"\r\n                onChange={handleChange}\r\n                value={ques.questionTags}\r\n                placeholder=\"e.g. (xml typescript wordpress)\"\r\n              />\r\n            </label> */}\r\n            <button type=\"submit\" className=\"submit-btn\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AskQuestion;\r\n"],"names":["today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","getHours","getMinutes","getSeconds","props","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","upVotes","downVotes","noOfAnswers","questionTitle","questionBody","questionTags","userPosted","userId","answer","answerBody","userAnswered","ques","setques","handleChange","event","target","name","value","prevQues","navigate","useNavigate","submitQues","preventDefault","console","group","process","JSON","stringify","askedOn","getNow","Authorization","token","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","htmlFor","onChange","type","placeholder","required","cols","rows","Box","sx","minWidth","marginBottom","FormControl","backgroundColor","InputLabel","id","Select","labelId","label","MenuItem"],"sourceRoot":""}